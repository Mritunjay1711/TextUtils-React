{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","react_default","a","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","concat","dist","to","title","aria-label","aria-current","aboutText","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","rows","value","onChange","event","target","disabled","length","newText","toUpperCase","showAlert","toLowerCase","sent","split","ans","n","i","substring","filter","element","defaultProps","Alert","height","alert","role","word","lower","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","components_Alert","react_router_dist","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ec965971.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n    // const [myStyle, setMyStyle]=useState({\r\n    //         color: 'black',\r\n    //         backgroundColor: 'white'\r\n    // })\r\n\r\n    let myStyle = {\r\n        color: props.mode ==='dark'?'white':'black',\r\n        backgroundColor: props.mode === 'dark'?'black':'white'\r\n    }\r\n    \r\n    return (\r\n        <div className='container' style={myStyle}>\r\n            <h2 className='my-3'>About Us</h2>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\" style={myStyle}>\r\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={myStyle}>\r\n                            Accordion Item #1\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={myStyle}>\r\n                            Accordion Item #2\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\" style={myStyle}>\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\" style={myStyle}>\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={myStyle}>\r\n                            Accordion Item #3\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <button type='button' className='btn btn-primary my-3' onClick={toggleStyle} >{btnText}</button> */}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n        {/* <a className=\"navbar-brand\" href=\"#\">{props.title}</a> */}\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a> */}\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n          <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n          {/* <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.blueMode}/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Blue Mode</label>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About text here\"\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to upper case\", \"success\")\r\n    }\r\n    const handleLowClick=()=>{\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lower case\", \"success\")\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        //to allow the user to write in box\r\n        setText(event.target.value);\r\n    }\r\n    const handleHeadClick=()=>{\r\n        let sent = text.split(\" \");\r\n        let ans = \"\";\r\n        let n = sent.length;\r\n        for(let i = 0; i < n - 1; i++)\r\n        {\r\n            ans = ans + sent[i][0].toUpperCase() + sent[i].substring(1).toLowerCase() + \" \";\r\n        }\r\n        ans = ans + sent[n-1][0].toUpperCase() + sent[n-1].substring(1).toLowerCase();\r\n        setText(ans);\r\n        props.showAlert(\"Converted to Heading case\", \"success\")\r\n    }\r\n    const handleSentClick=()=>{\r\n        let sent = text.split(\". \");\r\n        let ans = \"\";\r\n        let n = sent.length;\r\n        for(let i = 0; i < n - 1; i++)\r\n        {\r\n            ans = ans + sent[i][0].toUpperCase() + sent[i].substring(1).toLowerCase() + \". \";\r\n        }\r\n        ans = ans + sent[n-1][0].toUpperCase() + sent[n-1].substring(1).toLowerCase();\r\n        setText(ans);\r\n        props.showAlert(\"Converted to sentence case\", \"success\")\r\n    }\r\n    const handleClearText=()=>{\r\n        setText(\"\");\r\n    }\r\n    const[text, setText] = useState('');\r\n    // text = new text; //wrong way\r\n    // setText(\"new text\"); //correct way\r\n    return (\r\n        <>\r\n        <div className='container' style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <div className=\"mb-3\">\r\n\r\n                <h1>{props.heading}</h1>\r\n                <hr />\r\n                <textarea className=\"form-control\" aria-label=\"With textarea\" id=\"myBox\" rows=\"8\" value={text}onChange={handleOnChange} style ={{backgroundColor: props.mode=== 'dark'?'#13466e':'white', color: props.mode==='dark'?'white':'#042743'}}></textarea>\r\n            </div>\r\n            <div className='mb-3'>\r\n            <button disabled={text.length === 0} className='btn btn-primary mx-1 my-1' onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button disabled={text.length === 0} className='btn btn-primary mx-1 my-1' onClick={handleLowClick}>Convert to Lowercase</button>\r\n            <button disabled={text.length === 0} className='btn btn-primary mx-1 my-1' onClick={handleHeadClick}>Convert to HeadingCase</button>\r\n            <button disabled={text.length === 0} className='btn btn-primary mx-1 my-1' onClick={handleSentClick}>Convert to SentenceCase</button>\r\n            <button disabled={text.length === 0} className='btn btn-primary mx-1 my-1' onClick={handleClearText}>Clear text</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n            <p>\r\n                {0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} minutes to read\r\n            </p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0? text : \"Nothing to preview\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower[0].toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light')//Whether dark mode is enabled or not\n\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(()=>{\n        setAlert(null);\n      }, 1500)\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#0a3574';\n      showAlert(\"Dark mode has been enabled\", \"success\")\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\")\n    }\n  }\n\n\n\n  return (\n    <>\n    <Router>\n    <Navbar title=\"TextUtils\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert}/>\n    <div className=\"container\">\n    <Routes>\n          <Route exact path=\"/about\" element={\n            <About mode={mode}/>\n          }>\n          </Route>\n          <Route exact path=\"/\" element={\n          <TextForm showAlert={showAlert} heading=\"Try TextUtils - Word Counter, Character Counter\" mode={mode}/>\n           }>\n          </Route>\n    </Routes>\n    </div>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}