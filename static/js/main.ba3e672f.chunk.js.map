{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","blueMode","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","rows","value","onChange","event","target","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","sent","split","ans","n","length","i","substring","defaultProps","aboutText","Alert","alert","role","word","lower","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ba3e672f.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n          <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n          <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.blueMode}/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Blue Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About text here\"\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to upper case\", \"success\")\r\n    }\r\n    const handleLowClick=()=>{\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lower case\", \"success\")\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        //to allow the user to write in box\r\n        setText(event.target.value);\r\n    }\r\n    const handleHeadClick=()=>{\r\n        let sent = text.split(\" \");\r\n        let ans = \"\";\r\n        let n = sent.length;\r\n        for(let i = 0; i < n - 1; i++)\r\n        {\r\n            ans = ans + sent[i][0].toUpperCase() + sent[i].substring(1).toLowerCase() + \" \";\r\n        }\r\n        ans = ans + sent[n-1][0].toUpperCase() + sent[n-1].substring(1).toLowerCase();\r\n        setText(ans);\r\n        props.showAlert(\"Converted to Heading case\", \"success\")\r\n    }\r\n    const handleSentClick=()=>{\r\n        let sent = text.split(\". \");\r\n        let ans = \"\";\r\n        let n = sent.length;\r\n        for(let i = 0; i < n - 1; i++)\r\n        {\r\n            ans = ans + sent[i][0].toUpperCase() + sent[i].substring(1).toLowerCase() + \". \";\r\n        }\r\n        ans = ans + sent[n-1][0].toUpperCase() + sent[n-1].substring(1).toLowerCase();\r\n        setText(ans);\r\n        props.showAlert(\"Converted to sentence case\", \"success\")\r\n    }\r\n    const handleClearText=()=>{\r\n        setText(\"\");\r\n    }\r\n    const[text, setText] = useState('');\r\n    // text = new text; //wrong way\r\n    // setText(\"new text\"); //correct way\r\n    return (\r\n        <>\r\n        <div className='container' style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <div className=\"mb-3\">\r\n\r\n                <h1>{props.heading}</h1>\r\n                <hr />\r\n                <textarea className=\"form-control\" aria-label=\"With textarea\" id=\"myBox\" rows=\"8\" value={text}onChange={handleOnChange} style ={{backgroundColor: props.mode=== 'dark'?'grey':'white', color: props.mode==='dark'?'white':'black'}}></textarea>\r\n            </div>\r\n            <div className='mb-3'>\r\n            <button className='btn btn-primary mx-1' onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className='btn btn-primary mx-1' onClick={handleLowClick}>Convert to Lowercase</button>\r\n            <button className='btn btn-primary mx-1' onClick={handleHeadClick}>Convert to HeadingCase</button>\r\n            <button className='btn btn-primary mx-1' onClick={handleSentClick}>Convert to SentenceCase</button>\r\n            <button className='btn btn-primary mx-1' onClick={handleClearText}>Clear text</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>\r\n                {0.008 * text.split(\" \").length} minutes to read\r\n            </p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0? text : \"Enter something in the textbox above to preview\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower[0].toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light')//Whether dark mode is enabled or not\n\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(()=>{\n        setAlert(null);\n      }, 1500)\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark mode has been enabled\", \"success\")\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\")\n    }\n  }\n\n  const blueMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#0a3574';\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode} blueMode={blueMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container\">\n    {/* <Routes> */}\n          {/* <Route exact path=\"/about\" element={<About/>}> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\" element={ */}\n          <TextForm showAlert={showAlert} heading=\"Enter your text to analyse\" mode={mode}/>\n           {/* }> */}\n          {/* </Route> */}\n    {/* </Routes> */}\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}